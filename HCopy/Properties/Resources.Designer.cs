//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCopy.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HCopy.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Invalid parameter: {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidOptionFmt {
            get {
                return ResourceManager.GetString("InvalidOptionFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no parameter following {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ParameterRequiedFmt {
            get {
                return ResourceManager.GetString("ParameterRequiedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Numeric value is required following {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ParameterRequiredNumberFmt {
            get {
                return ResourceManager.GetString("ParameterRequiredNumberFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   hcopy &lt;source-uri&gt; &lt;destination-dir&gt; [options]
        ///hcopy copies files from &lt;source-uri&gt; listed in &quot;_checksum.sha&quot;.
        ///
        ///Options:
        ///  --wait &lt;file&gt;
        ///  -w &lt;file&gt;
        ///      Wait for the &lt;file&gt; write lock to be released before starting copying.
        ///
        ///  --wait-process &lt;process-id&gt;
        ///  -W &lt;process-id&gt;
        ///      Wait until the process with PID &lt;process-id&gt; has finished before starting the copy.
        ///
        ///  --run &lt;executable&gt;
        ///  -r &lt;executable&gt;
        ///      Starts the program specified by &lt;executable&gt; after copying is completed.
        ///
        ///  --param &lt; [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}

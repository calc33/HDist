//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuildSum.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BuildSum.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   {0}: No such directory に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DirectoryNotFoundFmt {
            get {
                return ResourceManager.GetString("DirectoryNotFoundFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cannot specify multiple --ignore-list に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Error_MultipleOption {
            get {
                return ResourceManager.GetString("Error_MultipleOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   --ignore and --ignore-list cannot be specified at the same time に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Error_OptionConfliected {
            get {
                return ResourceManager.GetString("Error_OptionConfliected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There is no parameter following {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ParameterRequiedFmt {
            get {
                return ResourceManager.GetString("ParameterRequiedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BuildSum [&lt;target-dir&gt;] [options]
        ///BuildSumは&lt;target-dir&gt;で指定したディレクトリに含まれるファイルの
        ///SHA1チェックサム一覧を _checksum.sha という名前で生成する。
        ///&lt;target-dir&gt;を省略した場合はカレントディレクトリが対象
        ///
        ///Options:
        ///  --compress &lt;compress-dir&gt;
        ///  -c &lt;compress-dir&gt;
        ///      圧縮ファイルを格納するディレクトリ。
        ///      圧縮ファイルを使うことでネットワークの負荷を軽減できる。
        ///      相対パスで指定した場合は&lt;target-dir&gt;からの相対パスになる。
        ///
        ///  --ignore &lt;name&gt;
        ///  -i &lt;name&gt;
        ///      一覧作成時に無視するファイル名/ディレクトリ名。ワイルドカード可。
        ///      複数のファイル名を指定したい場合、このオプションを複数回指定する。
        ///      --ignore-listと排他的に使用する。
        ///
        ///  --ignore-list &lt;filename&gt;
        ///  -I &lt;filenam [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}
